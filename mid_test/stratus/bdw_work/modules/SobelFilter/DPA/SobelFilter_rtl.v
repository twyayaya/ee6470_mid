// Generated by stratus_hls 19.12-s100  (91710.131054)
// Sat May  1 01:16:04 2021
// from ../SobelFilter.cpp

`timescale 1ps / 1ps

      
module SobelFilter(i_clk, i_rst, i_rgb_busy, i_rgb_vld, i_rgb_data, o_result_busy, o_result_vld, o_result_data);

      input i_clk;
      input i_rst;
      input i_rgb_vld;
      input [23:0] i_rgb_data;
      input o_result_busy;
      output i_rgb_busy;
      output o_result_vld;
      output [23:0] o_result_data;
      reg [23:0] o_result_data;
      reg o_result_m_req_m_prev_trig_req;
      reg o_result_m_unacked_req;
      wire SobelFilter_Xor_1Ux1U_1U_1_1_out1;
      wire SobelFilter_Or_1Ux1U_1U_4_2_out1;
      reg SobelFilter_N_Muxb_1_2_15_4_4_out1;
      reg i_rgb_m_unvalidated_req;
      wire SobelFilter_gen_busy_r_4_21_gnew_req;
      wire SobelFilter_gen_busy_r_4_21_gdiv;
      wire SobelFilter_gen_busy_r_4_21_gen_busy_i_rgb_m_data_is_invalid_next;
      reg[2:0] global_state_next;
      /*signed*/reg[7:0] SobelFilter_Add2Mul2s8u8u8_4_11_in1;
      reg[7:0] SobelFilter_Add2Mul2s8u8u8_4_11_in3;
      reg gs_ctrl0;
      wire[15:0] SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_out1;
      wire[18:0] bits_001;
      wire[7:0] SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in1;
      wire[7:0] SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in2;
      wire[3:0] SobelFilter_Add2u2Mul2i3u2_4_6_out1;
      reg[7:0] s_reg_25;
      wire[7:0] SobelFilter_Div_8U_19_4_10_out1;
      reg[7:0] s_reg_24;
      wire[1:0] SobelFilter_Add2i1u2_4_7_out1;
      wire[1:0] SobelFilter_Add2i1u2_4_8_out1;
      reg[1:0] s_reg_22;
      reg[7:0] s_reg_21;
      wire[7:0] SobelFilter_Add2i128u8_4_12_out1;
      wire[7:0] SobelFilter_Add2Mul2s8u8u8_4_11_out1;
      wire[7:0] SobelFilter_Add2Mul2s8u8u8_4_16_out1;
      reg[7:0] s_reg_19;
      reg[1:0] s_reg_23;
      reg[1:0] s_reg_18;
      wire SobelFilter_And_1Ux1U_1U_4_19_out1;
      wire[2:0] SobelFilter_gen_busy_r_4_21_out1;
      wire SobelFilter_Not_1U_1U_1_3_out1;
      reg o_result_m_req_m_trig_req;
      wire SobelFilter_Lti3u2_4_13_out1;
      wire SobelFilter_Lti3u2_4_14_out1;
      reg[2:0] global_state;
      reg i_rgb_m_busy_req_0;
      wire[7:0] SobelFilter_Add2i128u8_4_18_out1;
      reg[7:0] s_reg_20;
      reg[7:0] s_reg_26;
      reg stall0;
      wire[3:0] filter2_in1;
      wire[31:0] filter2_out1;

         SobelFilter_ROM_9X32_filter2 filter2(
                                        .in1( filter2_in1 ),
                                        .out1( filter2_out1 ),
                                        .clk( i_clk )
                                      );

         // resource: regr_en_24
         always @(posedge i_clk)
          begin :drive_o_result_data
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  o_result_data <= {SobelFilter_Add2i128u8_4_18_out1, {s_reg_20, s_reg_26}};
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_busy_req_0
            if (i_rst == 1'b0) begin
               i_rgb_m_busy_req_0 <= 1'd1;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd0, 3'd6:                         begin
                           i_rgb_m_busy_req_0 <= 1'd0;
                        end
                        
                        3'd1:                         begin
                           i_rgb_m_busy_req_0 <= 1'd1;
                        end
                        
                        3'd3:                         begin
                           if (SobelFilter_Lti3u2_4_14_out1) begin
                              i_rgb_m_busy_req_0 <= 1'd0;
                           end
                           else begin
                              if (SobelFilter_Lti3u2_4_13_out1) begin
                                 i_rgb_m_busy_req_0 <= 1'd0;
                              end
                           end
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_trig_req <= 1'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state) 

                        3'd4:                         begin
                           o_result_m_req_m_trig_req <= SobelFilter_Not_1U_1U_1_3_out1;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // resource: mux_1bx3i1c
         always @(SobelFilter_And_1Ux1U_1U_4_19_out1 or SobelFilter_gen_busy_r_4_21_out1[0] or global_state)
          begin :drive_stall0
            case (global_state) 

               3'd1:                begin
                  stall0 = SobelFilter_gen_busy_r_4_21_out1[0];
               end
               
               3'd5:                begin
                  stall0 = SobelFilter_And_1Ux1U_1U_4_19_out1;
               end
               
               default:                begin
                  stall0 = 1'b0;
               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_18
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_18 <= 2'd0;
                     end
                     
                     3'd3:                      begin
                        if (SobelFilter_Lti3u2_4_14_out1) begin
                        end
                        else begin
                           s_reg_18 <= s_reg_23;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx2i1c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_19
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_19 <= 8'd000;
                     end
                     
                     3'd3:                      begin
                        s_reg_19 <= SobelFilter_Add2Mul2s8u8u8_4_16_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx3i1c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_20
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_20 <= 8'd000;
                     end
                     
                     3'd3:                      begin
                        if (SobelFilter_Lti3u2_4_14_out1) begin
                           s_reg_20 <= SobelFilter_Add2Mul2s8u8u8_4_11_out1;
                        end
                        else begin
                           if (SobelFilter_Lti3u2_4_13_out1) begin
                              s_reg_20 <= SobelFilter_Add2Mul2s8u8u8_4_11_out1;
                           end
                           else begin
                              s_reg_20 <= SobelFilter_Add2i128u8_4_12_out1;
                           end
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_8bx2i1c
         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_21
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_21 <= 8'd000;
                     end
                     
                     3'd2:                      begin
                        s_reg_21 <= SobelFilter_Add2Mul2s8u8u8_4_11_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: mux_2bx2i1c
         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_22
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd0, 3'd6:                      begin
                        s_reg_22 <= 2'd0;
                     end
                     
                     3'd1:                      begin
                        s_reg_22 <= SobelFilter_Add2i1u2_4_8_out1;
                     end
                     
                     3'd3:                      begin
                        if (SobelFilter_Lti3u2_4_14_out1) begin
                        end
                        else begin
                           s_reg_22 <= 2'd0;
                        end
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_2
         always @(posedge i_clk)
          begin :drive_s_reg_23
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd1:                      begin
                        s_reg_23 <= SobelFilter_Add2i1u2_4_7_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_24
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd1:                      begin
                        s_reg_24 <= SobelFilter_Div_8U_19_4_10_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_25
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  s_reg_25 <= filter2_out1[7:0];
               end
               
            endcase

         end

         // resource: regr_en_8
         always @(posedge i_clk)
          begin :drive_s_reg_26
            case (stall0) 

               1'b1:                begin
               end
               
               1'b0:                begin
                  case (global_state) 

                     3'd2:                      begin
                        s_reg_26 <= SobelFilter_Add2i128u8_4_12_out1;
                     end
                     
                  endcase

               end
               
            endcase

         end

         // resource: SobelFilter_Add2u2Mul2i3u2_4  instance: SobelFilter_Add2u2Mul2i3u2_4_6
         assign SobelFilter_Add2u2Mul2i3u2_4_6_out1 = {2'b00, s_reg_18}*4'd03 + {2'b00, s_reg_22};

         // resource: SobelFilter_Add2i1u2_4  instance: SobelFilter_Add2i1u2_4_7
         assign SobelFilter_Add2i1u2_4_7_out1 = s_reg_18 + 2'd1;

         // resource: SobelFilter_Add2i1u2_4  instance: SobelFilter_Add2i1u2_4_8
         assign SobelFilter_Add2i1u2_4_8_out1 = s_reg_22 + 2'd1;

         // instance: drive_SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in2
         assign SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in2 = i_rgb_data[15:8];

         // instance: drive_SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in1
         assign SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in1 = i_rgb_data[23:16];

         // resource: SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4  instance: SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9
         assign bits_001 = {11'b00000000000, i_rgb_data[7:0]}*19'd000299 + {11'b00000000000, SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in2}*19'd000587 + {11'b00000000000, SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_in1}*19'd000144;

         // resource: SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4  instance: SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9
         assign SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_out1 = bits_001[18:3];

         // resource: SobelFilter_Div_8U_19_4  instance: SobelFilter_Div_8U_19_4_10
         assign SobelFilter_Div_8U_19_4_10_out1 = SobelFilter_R18_3Add3Mul2i144u8Mul2iLLu8Mul2i299u8_4_9_out1 / 7'd125;

         // instance: drive_filter2_in1
         assign filter2_in1 = SobelFilter_Add2u2Mul2i3u2_4_6_out1;

         // resource: mux_8bx2i0c
         always @(s_reg_20 or s_reg_21 or gs_ctrl0)
          begin :drive_SobelFilter_Add2Mul2s8u8u8_4_11_in3
            if (gs_ctrl0) begin
               SobelFilter_Add2Mul2s8u8u8_4_11_in3 = s_reg_20;
            end
            else begin
               SobelFilter_Add2Mul2s8u8u8_4_11_in3 = s_reg_21;
            end
         end

         // resource: mux_8bx2i0c
         always @(s_reg_25 or filter2_out1[7:0] or gs_ctrl0)
          begin :drive_SobelFilter_Add2Mul2s8u8u8_4_11_in1
            if (gs_ctrl0) begin
               SobelFilter_Add2Mul2s8u8u8_4_11_in1 = s_reg_25;
            end
            else begin
               SobelFilter_Add2Mul2s8u8u8_4_11_in1 = filter2_out1[7:0];
            end
         end

         // resource: SobelFilter_Add2Mul2s8u8u8_4  instance: SobelFilter_Add2Mul2s8u8u8_4_11
         assign SobelFilter_Add2Mul2s8u8u8_4_11_out1 = SobelFilter_Add2Mul2s8u8u8_4_11_in3 + s_reg_24*SobelFilter_Add2Mul2s8u8u8_4_11_in1;

         // resource: SobelFilter_Add2i128u8_4  instance: SobelFilter_Add2i128u8_4_12
         assign SobelFilter_Add2i128u8_4_12_out1 = SobelFilter_Add2Mul2s8u8u8_4_11_out1 + 8'd128;

         // resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_13
         assign SobelFilter_Lti3u2_4_13_out1 = s_reg_23 < 2'd3;

         // resource: SobelFilter_Lti3u2_4  instance: SobelFilter_Lti3u2_4_14
         assign SobelFilter_Lti3u2_4_14_out1 = s_reg_22 < 2'd3;

         // resource: SobelFilter_Add2Mul2s8u8u8_4  instance: SobelFilter_Add2Mul2s8u8u8_4_16
         assign SobelFilter_Add2Mul2s8u8u8_4_16_out1 = s_reg_19 + s_reg_24*s_reg_25;

         // resource: SobelFilter_Add2i128u8_4  instance: SobelFilter_Add2i128u8_4_18
         assign SobelFilter_Add2i128u8_4_18_out1 = s_reg_19 + 8'd128;

         // resource: regr_en_sc_3
         always @(posedge i_clk)
          begin :drive_global_state
            if (i_rst == 1'b0) begin
               global_state <= 3'd0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     global_state <= global_state_next;
                  end
                  
               endcase

            end
         end

         // resource: mux_3bx2i1c
         always @(SobelFilter_Lti3u2_4_13_out1 or SobelFilter_Lti3u2_4_14_out1 or global_state)
          begin :drive_global_state_next
            case (global_state) 

               3'd0, 3'd6:                begin
                  global_state_next = 3'd1;
               end
               
               3'd3:                begin
                  if (SobelFilter_Lti3u2_4_14_out1) begin
                     global_state_next = 3'd1;
                  end
                  else begin
                     if (SobelFilter_Lti3u2_4_13_out1) begin
                        global_state_next = 3'd1;
                     end
                     else begin
                        global_state_next = global_state + 3'd1;
                     end
                  end
               end
               
               default:                begin
                  global_state_next = global_state + 3'd1;
               end
               
            endcase

         end

         // resource: mux_1bx2i2c
         // resource: regr_en_sc_1
         always @(posedge i_clk)
          begin :drive_gs_ctrl0
            if (i_rst == 1'b0) begin
               gs_ctrl0 <= 1'b0;
            end
            else begin
               case (stall0) 

                  1'b1:                   begin
                  end
                  
                  1'b0:                   begin
                     case (global_state_next) 

                        3'd3:                         begin
                           gs_ctrl0 <= 1'b1;
                        end
                        
                        default:                         begin
                           gs_ctrl0 <= 1'b0;
                        end
                        
                     endcase

                  end
                  
               endcase

            end
         end

         // instance: drive_i_rgb_busy
         assign i_rgb_busy = SobelFilter_gen_busy_r_4_21_out1[2];

         // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_21
         assign SobelFilter_gen_busy_r_4_21_out1 = {SobelFilter_gen_busy_r_4_21_gnew_req, {SobelFilter_gen_busy_r_4_21_gdiv, SobelFilter_gen_busy_r_4_21_gen_busy_i_rgb_m_data_is_invalid_next}};

         // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_21
         assign SobelFilter_gen_busy_r_4_21_gen_busy_i_rgb_m_data_is_invalid_next = ~SobelFilter_gen_busy_r_4_21_gdiv;

         // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_21
         assign SobelFilter_gen_busy_r_4_21_gdiv = i_rgb_vld & !SobelFilter_gen_busy_r_4_21_gnew_req;

         // resource: SobelFilter_gen_busy_r_4  instance: SobelFilter_gen_busy_r_4_21
         assign SobelFilter_gen_busy_r_4_21_gnew_req = i_rgb_m_busy_req_0 & (i_rgb_m_unvalidated_req | i_rgb_vld);

         // resource: regr_ss_1
         always @(posedge i_clk)
          begin :drive_i_rgb_m_unvalidated_req
            if (i_rst == 1'b0) begin
               i_rgb_m_unvalidated_req <= 1'd1;
            end
            else begin
               i_rgb_m_unvalidated_req <= SobelFilter_N_Muxb_1_2_15_4_4_out1;
            end
         end

         // resource: SobelFilter_N_Muxb_1_2_15_4
         always @(i_rgb_vld or i_rgb_m_busy_req_0 or i_rgb_m_unvalidated_req)
          begin :SobelFilter_N_Muxb_1_2_15_4_4
            if (i_rgb_m_busy_req_0) begin
               SobelFilter_N_Muxb_1_2_15_4_4_out1 = i_rgb_m_unvalidated_req;
            end
            else begin
               SobelFilter_N_Muxb_1_2_15_4_4_out1 = i_rgb_vld;
            end
         end

         // instance: drive_o_result_vld
         assign o_result_vld = SobelFilter_Or_1Ux1U_1U_4_2_out1;

         // resource: SobelFilter_Or_1Ux1U_1U_4  instance: SobelFilter_Or_1Ux1U_1U_4_2
         assign SobelFilter_Or_1Ux1U_1U_4_2_out1 = o_result_m_unacked_req | SobelFilter_Xor_1Ux1U_1U_1_1_out1;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_unacked_req
            if (i_rst == 1'b0) begin
               o_result_m_unacked_req <= 1'd0;
            end
            else begin
               o_result_m_unacked_req <= SobelFilter_And_1Ux1U_1U_4_19_out1;
            end
         end

         // resource: SobelFilter_And_1Ux1U_1U_4  instance: SobelFilter_And_1Ux1U_1U_4_19
         assign SobelFilter_And_1Ux1U_1U_4_19_out1 = o_result_busy & o_result_vld;

         // resource: SobelFilter_Xor_1Ux1U_1U_1  instance: SobelFilter_Xor_1Ux1U_1U_1_1
         assign SobelFilter_Xor_1Ux1U_1U_1_1_out1 = o_result_m_req_m_trig_req ^ o_result_m_req_m_prev_trig_req;

         // resource: regr_sc_1
         always @(posedge i_clk)
          begin :drive_o_result_m_req_m_prev_trig_req
            if (i_rst == 1'b0) begin
               o_result_m_req_m_prev_trig_req <= 1'd0;
            end
            else begin
               o_result_m_req_m_prev_trig_req <= o_result_m_req_m_trig_req;
            end
         end

         // resource: SobelFilter_Not_1U_1U_1  instance: SobelFilter_Not_1U_1U_1_3
         assign SobelFilter_Not_1U_1U_1_3_out1 = !o_result_m_req_m_trig_req;


endmodule

